Here's the equivalent Gradle build script for your Maven project:

```gradle
plugins {
    id 'java'
    id 'maven-publish'
}

group = 'org.tw.kafka.testing'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven/"
    }
}

dependencies {
    implementation 'io.confluent:kafka-avro-serializer:7.6.0'
    implementation 'org.apache.kafka:kafka-clients:3.6.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.2'
    implementation 'org.projectlombok:lombok:1.18.24'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
}

task generateJsonSchema {
    doLast {
        exec {
            commandLine 'java', '-jar', 'jsonschema2pojo-maven-plugin-0.5.1.jar', '-s', 'schemas/', '-t', 'java/', '--includeAdditionalProperties', 'false', '--includeHashcodeAndEquals', 'false'
        }
    }
}

task generateAvroSchema {
    doLast {
        exec {
            commandLine 'java', '-jar', 'avro-maven-plugin-1.8.1.jar', 'schema', '-s', 'schema/', '-t', 'java/', '--imports', 'LineItem.avsc,DeliveryAddress.avsc'
        }
    }
}

compileJava.dependsOn generateJsonSchema
compileJava.dependsOn generateAvroSchema
```

You would need to adjust the paths for the JSON Schema and Avro Schema generation tasks according to your project structure. Also, make sure to replace `'jsonschema2pojo-maven-plugin-0.5.1.jar'` and `'avro-maven-plugin-1.8.1.jar'` with the correct paths to the respective JAR files in your project.
